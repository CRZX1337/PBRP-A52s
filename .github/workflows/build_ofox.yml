name: Build OrangeFox Recovery for a52sxq

on:
  workflow_dispatch: # Ermöglicht manuelles Auslösen des Workflows über die GitHub-UI
  push:
    branches: [ main, master ] # Optional: Auslösen bei Push auf main oder master Branch
  pull_request: # Optional: Auslösen bei Pull Requests

jobs:
  build:
    runs-on: ubuntu-latest # Nutzt Ubuntu als Build-Umgebung

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Korrekte Distribution für OpenJDK (ehemals AdoptOpenJDK)
          java-version: '8'

      - name: Search for wxWidgets Packages # NEUER SCHRITT: Suche nach wxWidgets Paketen (vorerst behalten - für Fehlersuche)
        run: |
          sudo apt-get update # Paketlisten aktualisieren, damit die Suche aktuell ist
          apt-cache search wxwidgets gtk3 dev # Suche nach relevanten Paketen

      - name: Install Dependencies
        run: |
          sudo apt-get update # EINMALIG ausführen, am Anfang reicht!
          sudo apt-get install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick libncurses5-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.2-dev libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev openjdk-8-jdk python3 python3-pip repo # KORRIGIERT: libwxgtk3.2-dev

      - name: Install Repo
        run: |
          mkdir -p ~/.bin
          curl -s https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          export PATH=~/.bin:$PATH
          repo --version # Gib die repo Version im Log aus

      - name: Configure Git for GitLab Anonymous Access # NEU: Git Konfiguration für GitLab
        run: git config --global --add http.noProxy gitlab.com # KORRIGIERT: Richtige Option für noProxy

      - name: Set up Swap Space # NEU: Swap Space einrichten
        run: |
          sudo fallocate -l 4G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h # Gib die Speicherauslastung aus, um Swap zu überprüfen

      - name: Cache Repo Sync # NEU: Caching für repo sync
        uses: actions/cache@v3
        id: cache-repo-sync
        with:
          path: orangefox # Ordner der gecached werden soll
          key: repo-sync-${{ runner.os }}-${{ github.sha }} # Cache Key (wird bei Code-Änderungen invalidiert)
          restore-keys: |
            repo-sync-${{ runner.os }}-

      - name: Initialize Repo and Sync Source
        if: steps.cache-repo-sync.outputs.cache-hit != 'true' # Nur syncen, wenn Cache nicht getroffen wurde
        run: |
          mkdir orangefox
          cd orangefox
          repo init -u https://gitlab.com/OrangeFoxRecovery/platform_manifest.git -b stable # oder den Branch den du bauen möchtest (z.B. android-12.1)
          repo sync -j$(nproc --all) --force-sync --no-clone-bundle --no-tags

      - name: Checkout Device Tree
        run: |
          cd orangefox
          mkdir -p device/samsung/a52sxq
          git clone --depth=1 https://github.com/CRZX1337/orangefox_device_samsung_a52sxq.git device/samsung/a52sxq

      - name: Setup Build Environment
        run: |
          cd orangefox
          source build/envsetup.sh
          lunch orangefox_a52sxq-eng # Lunch Target: orangefox_a52sxq-eng - KORREKT!

      - name: Make Recovery Image
        run: |
          cd orangefox
          mka recoveryimage

      - name: Upload Recovery Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: orangefox-recovery-a52sxq
          path: orangefox/out/target/product/a52sxq/recovery.img

      - name: Output Success Message
        run: echo "OrangeFox Recovery Build erfolgreich abgeschlossen!"
